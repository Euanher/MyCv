oswagger: '2.0'
info:
  version: 1.0.0-oas3
  title: myCV
  contact:
    name: Euan
    email: euanheradien@gmail.com
    url: https://github.com/Euanher/MyCv.git
  license: 
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  description: This is a simple API
  termsOfService: https://github.com/Euanher/MyCv.git
host: virtserver.swaggerhub.com
basePath: /Euanher/MyCV/1.0.0
tags:

  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
schemes:
  - mydb
paths:
  /localhost:
    get:
      tags:
        - admins
        - developers
        - admins
      summary: searches localhost
      operationId: searchlocalhost
      produces:
        - application/json
      description: |
        By passing in the appropriate options, you can search for
        available localhost in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up localhost
          required: true
          type: string
          schema: 
          -  type: connection id
        - in: query
          name: skip
          description: number of records to skip for pagination
          required: false
          type: integer
          minimum: 0
          format: int32
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          type: integer
          maximum: 50
          minimum: 0
          format: int32
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/InventoryItem'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MySQL'
        '400':
          description: bad input parameter
    post:
      tags:
        - developers
        - admins
      operationId: addInventory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: inventoryItem
          description: Inventory item to add
          required: false
          schema:
            $ref: '#/definitions/InventoryItem'
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        description: Inventory item to add
      summary: Add View
components:
    Schema:
      type: object
      properties:
        id:
          type: integer
          format: int64
    schemas:
      mydb:
        type: object
        properties:
          id:
            type: integer
            format: int64
        description: "CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 "
      Localdb:
        type: object
        properties:
          id:
            type: integer
            format: int64
        description: "CREATE SCHEMA IF NOT EXISTS `LocalDB` DEFAULT CHARACTER SET utf8mb4 "
definitions:
  MySQL:
    type: object
    properties:
      id:
        type: integer
        format: int64
    description: mySQL database
  Model:
    description: m